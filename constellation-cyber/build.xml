<?xml version="1.0" encoding="UTF-8"?>
<project name="Constellation Cyber" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:if="ant:if" xmlns:unless="ant:unless">
    <description>Builds the Constellation Cyber module suite which is hosted on https://constellation-app.com</description>

    <import file="nbproject/build-impl.xml"/>

    <!-- build jre zips -->
    <property name="dist.version" value="v3.0.0-alpha"/>
    <property name="jre.filename.windows" value="zulu21.32.17-ca-fx-jre21.0.2-win_x64"/>
    <property name="jre.url.windows" value="https://cdn.azul.com/zulu/bin/${jre.filename.windows}.zip"/>
    <property name="jre.filename.macosx" value="zulu21.32.17-ca-fx-jre21.0.2-macosx_x64"/>
    <property name="jre.url.macosx" value="https://cdn.azul.com/zulu/bin/${jre.filename.macosx}.zip"/>
    <property name="jre.filename.linux" value="zulu21.32.17-ca-fx-jre21.0.2-linux_x64"/>
    <property name="jre.url.linux" value="https://cdn.azul.com/zulu/bin/${jre.filename.linux}.tar.gz"/>
    <property name="dist.filename.linux" value="constellation-cyber-linux-${dist.version}"/>
    <property name="dist.filename.windows" value="constellation-cyber-win-${dist.version}"/>
    <property name="dist.filename.macosx" value="constellation-cyber-macosx-${dist.version}"/>
    <property name="nobody" value="65534"/>

    <!-- Windows Section -->

    <target name="-download-windows-jre" >
        <echo message="downloading JRE..."/>
        <get src="${jre.url.windows}"
             dest="${basedir}" usetimestamp="true"/>
        <unzip src="${basedir}/${jre.filename.windows}.zip" dest="${basedir}"/>
        <delete file="${basedir}/${jre.filename.windows}.zip"/>
    </target>

    <target name="build-zip-with-windows-jre" depends="build,build-launchers,-download-windows-jre"
            description="Builds a ZIP distribution of the suite, launchers, and selected modules from the platform. This includes the JRE for Windows.">
        <mkdir dir="${dist.dir}"/>
        <!-- pathfileset does not support 'prefix' and 'filemode' parameters, we have to copy them to temp location -->
        <tempfile property="temp.dir.nbexec" destdir="${suite.build.dir}" deleteonexit="true" prefix="nbexec"/>
        <tempfile property="temp.dir.rest" destdir="${suite.build.dir}" deleteonexit="delete" prefix="rest"/>
        <subant genericantfile="${harness.dir}/suite.xml" target="copy-cluster" inheritrefs="true">
            <property name="dest.dir" value="${temp.dir.rest}"/>
            <property name="nbexec.dir" value="${temp.dir.nbexec}"/>
            <property name="build.dir" value="${suite.build.dir}"/>
            <resources refid="zip.platform.clusters"/>
        </subant>
        <fixcrlf srcdir="${build.launcher.dir}/etc/"
                 destdir="${build.launcher.dir}/etc/"
                 preservelastmodified="true"
                 eol="crlf" />

        <!-- delete the harness folder which is only required for testing -->
        <delete dir="${temp.dir.rest}/harness"/>

        <zip destfile="${dist.dir}/${dist.filename.windows}.zip">
            <!-- Using pre-built executable files that come with the Constellation icon -->
            <!--<zipfileset dir="${build.launcher.dir}/bin/" filemode="755" prefix="${app.name}/bin"/>-->
            <zipfileset dir="${basedir}/../distribution/" filemode="755" includes="*.bat, bin/*.exe" prefix="${app.name}"/>
            <zipfileset dir="${build.launcher.dir}/etc/" prefix="${app.name}/etc"/>
            <zipfileset dir="${temp.dir.nbexec}" filemode="755" prefix="${app.name}"/>
            <zipfileset dir="${temp.dir.rest}" prefix="${app.name}"/>
            <zipfileset dir="${basedir}/${jre.filename.windows}/" prefix="${app.name}/jre"/>
            <!-- Yes, the doubled app.name is a bit ugly, but better than the alternative; cf. #66441: -->
            <zipfileset dir="${cluster}" prefix="${app.name}/${app.name}">
                <exclude name="config/Modules/*.xml_hidden"/>
            </zipfileset>
        </zip>
        <delete dir="${basedir}/${jre.filename.windows}/"/>
    </target>

    <!-- MacOSX Section -->

    <!-- This is a copy of -download-windows-jre, if there is a better way to do this then let me know -->
    <target name="-download-macosx-jre" >
        <echo message="downloading JRE..."/>
        <get src="${jre.url.macosx}"
             dest="${basedir}" usetimestamp="true"/>
        <exec executable="unzip">
            <arg value="${basedir}/${jre.filename.macosx}.zip"/>
        </exec>
        <delete file="${basedir}/${jre.filename.macosx}.zip"/>
    </target>

    <!-- This is a copy of build-zip-with-windows-jre", if there is a better way to do this then let me know -->
    <target name="build-zip-with-macosx-jre" depends="build,build-launchers,-download-macosx-jre"
            description="Builds a ZIP distribution of the suite, launchers, and selected modules from the platform. This includes the JRE for MacOSX.">
        <mkdir dir="${dist.dir}"/>
        <!-- pathfileset does not support 'prefix' and 'filemode' parameters, we have to copy them to temp location -->
        <tempfile property="temp.dir.nbexec" destdir="${suite.build.dir}" deleteonexit="true" prefix="nbexec"/>
        <tempfile property="temp.dir.rest" destdir="${suite.build.dir}" deleteonexit="delete" prefix="rest"/>
        <subant genericantfile="${harness.dir}/suite.xml" target="copy-cluster" inheritrefs="true">
            <property name="dest.dir" value="${temp.dir.rest}"/>
            <property name="nbexec.dir" value="${temp.dir.nbexec}"/>
            <property name="build.dir" value="${suite.build.dir}"/>
            <resources refid="zip.platform.clusters"/>
        </subant>
        <fixcrlf srcdir="${build.launcher.dir}/etc/"
                 destdir="${build.launcher.dir}/etc/"
                 preservelastmodified="true"
                 eol="lf" />

        <!-- delete the harness folder which is only required for testing -->
        <delete dir="${temp.dir.rest}/harness"/>

        <tar destfile="${dist.dir}/${dist.filename.macosx}.tar">
            <!-- Using pre-built executable files that come with the Constellation icon -->
            <!--<tarfileset dir="${build.launcher.dir}/bin/" filemode="755" prefix="${app.name}/bin"/>-->
            <tarfileset dir="${basedir}/../distribution/" filemode="755" prefix="${app.name}" uid="${nobody}" gid="${nobody}">
                <exclude name="*.bat"/>
                <exclude name="bin/*.exe"/>
            </tarfileset>
            <tarfileset dir="${build.launcher.dir}/etc/" prefix="${app.name}/etc" uid="${nobody}" gid="${nobody}"/>
            <tarfileset dir="${temp.dir.nbexec}" filemode="755" prefix="${app.name}" uid="${nobody}" gid="${nobody}"/>
            <tarfileset dir="${temp.dir.rest}" prefix="${app.name}" uid="${nobody}" gid="${nobody}"/>

            <!-- Make sure the files in jre/bin are executable -->
            <tarfileset dir="${basedir}/${jre.filename.macosx}/" prefix="${app.name}/jre" uid="${nobody}" gid="${nobody}">
                <exclude name="bin/*"/>
            </tarfileset>
            <tarfileset dir="${basedir}/${jre.filename.macosx}/bin/" filemode="755" prefix="${app.name}/jre/bin" uid="${nobody}" gid="${nobody}"/>
            <!-- Yes, the doubled app.name is a bit ugly, but better than the alternative; cf. #66441: -->
            <tarfileset dir="${cluster}" prefix="${app.name}/${app.name}" uid="${nobody}" gid="${nobody}">
                <exclude name="config/Modules/*.xml_hidden"/>
            </tarfileset>
        </tar>
        <gzip src="${dist.dir}/${dist.filename.macosx}.tar" destfile="${dist.dir}/${dist.filename.macosx}.tar.gz"/>
        <delete file="${dist.dir}/${dist.filename.macosx}.tar"/>
        <delete dir="${basedir}/${jre.filename.macosx}/"/>
    </target>

    <!-- Linux Section -->

    <!-- This is a copy of -download-windows-jre, if there is a better way to do this then let me know -->
    <target name="-download-linux-jre" >
        <echo message="downloading JRE..."/>
        <get src="${jre.url.linux}"
             dest="${basedir}" usetimestamp="true"/>
        <untar src="${basedir}/${jre.filename.linux}.tar.gz" dest="${basedir}" compression="gzip"/>
        <delete file="${basedir}/${jre.filename.linux}.tar.gz"/>
    </target>

    <!-- This is a copy of build-zip-with-windows-jre", if there is a better way to do this then let me know -->
    <target name="build-zip-with-linux-jre" depends="build,build-launchers,-download-linux-jre"
            description="Builds a ZIP distribution of the suite, launchers, and selected modules from the platform. This includes the JRE for Linux.">
        <mkdir dir="${dist.dir}"/>
        <!-- pathfileset does not support 'prefix' and 'filemode' parameters, we have to copy them to temp location -->
        <tempfile property="temp.dir.nbexec" destdir="${suite.build.dir}" deleteonexit="true" prefix="nbexec"/>
        <tempfile property="temp.dir.rest" destdir="${suite.build.dir}" deleteonexit="delete" prefix="rest"/>
        <subant genericantfile="${harness.dir}/suite.xml" target="copy-cluster" inheritrefs="true">
            <property name="dest.dir" value="${temp.dir.rest}"/>
            <property name="nbexec.dir" value="${temp.dir.nbexec}"/>
            <property name="build.dir" value="${suite.build.dir}"/>
            <resources refid="zip.platform.clusters"/>
        </subant>
        <fixcrlf srcdir="${build.launcher.dir}/etc/"
                 destdir="${build.launcher.dir}/etc/"
                 preservelastmodified="true"
                 eol="lf" />

        <!-- delete the harness folder which is only required for testing -->
        <delete dir="${temp.dir.rest}/harness"/>

        <tar destfile="${dist.dir}/${dist.filename.linux}.tar">
            <!-- Using pre-built executable files that come with the Constellation icon -->
            <!--<tarfileset dir="${build.launcher.dir}/bin/" filemode="755" prefix="${app.name}/bin"/>-->
            <tarfileset dir="${basedir}/../distribution/" filemode="755" prefix="${app.name}" uid="${nobody}" gid="${nobody}">
                <exclude name="*.bat"/>
                <exclude name="bin/*.exe"/>
            </tarfileset>
            <tarfileset dir="${build.launcher.dir}/etc/" prefix="${app.name}/etc" uid="${nobody}" gid="${nobody}"/>
            <tarfileset dir="${temp.dir.nbexec}" filemode="755" prefix="${app.name}" uid="${nobody}" gid="${nobody}"/>
            <tarfileset dir="${temp.dir.rest}" prefix="${app.name}" uid="${nobody}" gid="${nobody}"/>

            <!-- Make sure the files in jre/bin are executable -->
            <tarfileset dir="${basedir}/${jre.filename.linux}/" prefix="${app.name}/jre" uid="${nobody}" gid="${nobody}">
                <exclude name="bin/*"/>
            </tarfileset>
            <tarfileset dir="${basedir}/${jre.filename.linux}/bin/" filemode="755" prefix="${app.name}/jre/bin" uid="${nobody}" gid="${nobody}"/>
            <!-- Yes, the doubled app.name is a bit ugly, but better than the alternative; cf. #66441: -->
            <tarfileset dir="${cluster}" prefix="${app.name}/${app.name}" uid="${nobody}" gid="${nobody}">
                <exclude name="config/Modules/*.xml_hidden"/>
            </tarfileset>
        </tar>
        <gzip src="${dist.dir}/${dist.filename.linux}.tar" destfile="${dist.dir}/${dist.filename.linux}.tar.gz"/>
        <delete file="${dist.dir}/${dist.filename.linux}.tar"/>
        <delete dir="${basedir}/${jre.filename.linux}/"/>
    </target>

</project>
